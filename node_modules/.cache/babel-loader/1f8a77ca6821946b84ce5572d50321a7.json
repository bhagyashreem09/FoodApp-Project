{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projects\\\\FoodApp-Project\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(props) {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [orderConfirmedShown, setOrderConfirmedShown] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `₹ ${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.lenght > 0;\n\n  function cartItemAddHandler(item) {\n    cartCtx.addItem(item);\n  }\n\n  function cartItemRemoveHandler(id) {\n    cartCtx.removeItem(id);\n  }\n\n  function orderHandler() {\n    setIsCheckout(true);\n  }\n\n  function submitOrderHandler(userData) {\n    fetch('https://food-order-app-d196f-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        customer: userData,\n        orderItems: cartCtx.items\n      })\n    }).then(response => {\n      if (response.ok) {\n        setOrderConfirmedShown(true);\n        console.log(\"Data post successful\"); // props.orderConfirmed(userData.name);\n\n        console.log(userData.name);\n      } else {\n        console.log(\"Data sent not successful\");\n      }\n    });\n    const orderConfirmedDetails = userData.street;\n  }\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \" Close \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), !hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: orderHandler,\n      className: classes.button,\n      children: \" Order \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['cart-items'],\n    children: [cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onAdd: cartItemAddHandler.bind(null, item),\n      onRemove: cartItemRemoveHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 25\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!orderConfirmedShown && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n        onConfirm: submitOrderHandler,\n        onCancel: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 32\n      }, this), !isCheckout && modalActions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 38\n    }, this), orderConfirmedShown && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Order Confirmed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Will be delivered at \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onClose,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cart, \"Ji8AwvSwWQzs33nJb72UJqVuUzA=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/Work/Projects/FoodApp-Project/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","classes","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","orderConfirmedShown","setOrderConfirmedShown","cartCtx","totalAmount","toFixed","hasItems","items","lenght","cartItemAddHandler","item","addItem","cartItemRemoveHandler","id","removeItem","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","customer","orderItems","then","response","ok","console","log","name","orderConfirmedDetails","street","modalActions","actions","onClose","button","cartItems","map","amount","price","bind","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\n\r\nimport Modal from '../UI/Modal';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './Checkout';\r\n\r\n\r\nfunction Cart (props) {\r\n    const [isCheckout, setIsCheckout] = useState(false);\r\n    const [orderConfirmedShown, setOrderConfirmedShown] = useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n\r\n    const totalAmount = `₹ ${cartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItems = cartCtx.items.lenght > 0;\r\n\r\n    function cartItemAddHandler (item) {\r\n        cartCtx.addItem(item);\r\n    }\r\n\r\n    function cartItemRemoveHandler (id) {\r\n        cartCtx.removeItem(id);\r\n    }\r\n\r\n    function orderHandler() {\r\n        setIsCheckout(true);\r\n    }\r\n\r\n    function submitOrderHandler (userData) {\r\n        \r\n                fetch('https://food-order-app-d196f-default-rtdb.firebaseio.com/orders.json', {\r\n                    method : 'POST',\r\n                    body : JSON.stringify({\r\n                        customer : userData,\r\n                        orderItems : cartCtx.items\r\n                    })\r\n                }).then(response => {\r\n                    if (response.ok) {\r\n                        setOrderConfirmedShown(true);\r\n                        console.log(\"Data post successful\");\r\n                        // props.orderConfirmed(userData.name);\r\n                        console.log(userData.name);\r\n\r\n                        \r\n                    } else {\r\n                        console.log(\"Data sent not successful\");\r\n                        \r\n                    }\r\n                })\r\n\r\n                const orderConfirmedDetails = userData.street;\r\n        \r\n    }\r\n\r\n    const modalActions = (\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}> Close </button>\r\n            {!hasItems && <button onClick={orderHandler} className={classes.button}> Order </button>}\r\n        </div>\r\n    )\r\n\r\n    const cartItems = ( <div className= {classes['cart-items'] }> \r\n        {cartCtx.items.map((item) => (\r\n            <CartItem \r\n                key={item.id}\r\n                name={item.name}\r\n                amount={item.amount}\r\n                price={item.price}\r\n                onAdd={cartItemAddHandler.bind(null, item)}\r\n                onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            />\r\n        )) \r\n        } </div> );\r\n    \r\n    return (\r\n        <div>\r\n            {!orderConfirmedShown && < Modal onClose={props.onClose}>\r\n                {cartItems}\r\n                <div className={classes.total}>\r\n                    <span>Total Amount</span>\r\n                    <span>{totalAmount}</span>\r\n                </div>\r\n                {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n                {!isCheckout && modalActions}\r\n            </Modal>}\r\n\r\n            {orderConfirmedShown && \r\n                <Modal onClose={props.onClose}>\r\n                    <h1>Order Confirmed</h1>\r\n                    <h3>Will be delivered at </h3>\r\n                    <button onClick={props.onClose}>Ok</button>\r\n                </Modal>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}