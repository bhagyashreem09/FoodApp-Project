{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projects\\\\FoodApp-Project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id); //will find index of an item in an array\n\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  function addItemToCartHandler(item) {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  }\n\n  function removeItemFromCartHandler(id) {}\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/Work/Projects/FoodApp-Project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG,EADa;AAErBC,EAAAA,WAAW,EAAG;AAFO,CAAzB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAChC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC1BJ,IAAI,IAAKA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADP,CAA9B,CAHuB,CAKf;;AAER,UAAMC,YAAY,GAAGV,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACHP,MAAAA,KAAK,EAAGa,YADL;AAEHZ,MAAAA,WAAW,EAAGK;AAFX,KAAP;AAIH;;AACD,SAAOP,gBAAP;AACH;;AAED,SAASgB,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,WAASoB,oBAAT,CAA+BZ,IAA/B,EAAqC;AACjCW,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAG,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH;;AAED,WAASa,yBAAT,CAAoCR,EAApC,EAAwC,CAEvC;;AAED,QAAMS,WAAW,GAAG;AAChBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADD;AAEhBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFP;AAGhBqB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBAEI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH;;GAzBQT,Y;;KAAAA,Y;AA2BT,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst defaultCartState = {\r\n    items : [],\r\n    totalAmount : 0\r\n}\r\n\r\nfunction cartReducer(state, action) {\r\n    if (action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            item => (item.id === action.item.id)\r\n            );  //will find index of an item in an array\r\n\r\n        const updatedItems = state.items.concat(action.item);\r\n        return {\r\n            items : updatedItems,\r\n            totalAmount : updatedTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\nfunction CartProvider(props) {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    function addItemToCartHandler (item) {\r\n        dispatchCartAction({type : 'ADD', item: item})\r\n    }\r\n\r\n    function removeItemFromCartHandler (id) {\r\n\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    };\r\n\r\n    return (\r\n\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}